@use "../abstracts/" as *;

// .container {
//   width: clamp(20ch, 90%, unit(1110));
//   margin-inline: auto;
// }

// layout
// .container {
//   --max-width: #{$container-max-width};
//   --padding: unit(16);

//   width: min(var(--max-width), 100% - ( var(--padding) * 2) );
//   margin-inline: auto;
// }

.container {
  --max-width: #{$container-max-width};
  --padding: #{$container-inline-padding} * 2;

  width: min(100% - var(--padding), var(--max-width));
  margin-inline: auto;
}

.container[data-type="wide"] {
  --max-width: #{$container-max-width-wide};
}

.flow > * + * {
  margin-top: var(--gap, 1rem);
}

.flex-group {
  display: flex;
  flex-wrap: wrap;
  column-gap: var(--flex-column-gap, $flex-group-gap);
  row-gap: var(--flex-row-gap, calc($flex-group-gap / 2));
  width: fit-content;
}

.flex-group.mx-auto {
  justify-content: center;
}

.even-columns {
  display: grid;
  gap: var(--grid-gap, $grid-gap);

  & > * {
    max-width: pxToRem(500px);
    margin-inline: auto;
  }

  @include mq(tablet) {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
  }
}

.grid-auto-fit {
  display: grid;
  gap: var(--grid-gap, $grid-gap);
  grid-template-columns: repeat(
    auto-fit,
    minmax(min(pxToRem(250px), 100%), 1fr)
  );
}

.interactive-figure {
  position: relative;
  overflow: hidden;

  figcaption {
    position: absolute;
    bottom: 0;
    background-color: rgb(clr(neutral, 900), 0.75);
    backdrop-filter: blur(0.35rem);
  }

  @media (hover: hover) {
    figcaption {
      transition: transform ease-in-out 350ms;
      transform: translateY(100%);
    }

    &:hover figcaption {
      transform: translateY(0%);
    }
  }
}

.lead {
  font-size: fs(500);
  color: clr(neutral, 900);
  text-transform: uppercase;
  font-weight: $fw-700;

  & + p {
    margin-top: 0;
  }
}

.box-shadow-1 {
  box-shadow: 0 0 0.75rem rgb(0 0 0 / 0.25);
}
